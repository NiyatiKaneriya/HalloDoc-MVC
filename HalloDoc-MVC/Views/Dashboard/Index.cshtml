@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@

@inject Microsoft.AspNetCore.Http.IHttpContextAccessor contextAccessor
@model IEnumerable<HalloDoc_DAL.Models.Request>

<div>
    <div class="tab-content">
        <div id="Dashboard" class="my-3 px-3 tab-pane active">
            <h3 class="mb-3">Medical History </h3>
            <div class="shadow-lg">
                <div class="w-100">
                    <div class="d-flex flex-row-reverse">
                        <a id="create_new_req" role="button" data-bs-toggle="modal" data-bs-target="#create_new"
                           class="form_button bg-transparent d-flex align-items-center justify-content-center m-3 p-3 fw-semibold text-decoration-none">
                            <p id="create_new_req_text" class="m-0">Create New Request</p>
                            <i id="create_new_req_icon" class="fa fa-solid fa-plus"></i>
                        </a>
                    </div>
                    <table class="w-100 " id="responsiveTable">
                        <thead>
                            <tr>
                                <th>Created Date <i class="fa fa-solid fa-arrow-down"></i></th>
                                <th class="mobile-hide">Current Status</th>
                                <th class="mobile-hide">Document</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr class="table-row">
                                <td data-label="Created Date">01/01/2024</td>
                                <td class="mobile-hide" data-label="Current Status">Active</td>
                                <td class="mobile-hide" data-label="Document">Document1.pdf</td>
                            </tr>
                             @foreach (var item in Model)
                            {
                                <tr class="table-row">
                                    <td data-label="Created Date">@Html.DisplayFor(modelItem => item.CreatedDate)</td>
                                    <td class="mobile-hide" data-label="Current Status"> @Html.DisplayFor(modelItem => item.Status)</td>
                                    <td class="mobile-hide" data-label="Document">Document1.pdf</td>
                                </tr>
                            } 
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

</div>
<div class="modal fade" id="create_new" tabindex="-1" aria-labelledby="exampleModalLabel" aria-hidden="true">
    <div class="modal-dialog ">
        <div class="modal-content border-0">
            <div class="modal-header bg-info text-white">
                <h1 class="modal-title fs-5" id="exampleModalLabel">Create New Request</h1>
                <button type="button" class="btn-close btn-close-white" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body ">
                <p>
                    Here, I want to create  new request for...
                </p>
                <div class="text-center">
                    <input type="radio" class="btn-check" name="options-outlined" id="success-outlined" autocomplete="off" checked>
                    <label class="btn btn-outline-info text- mx-2" for="success-outlined">Me</label>

                    <input type="radio" class="btn-check" name="options-outlined" id="danger-outlined" autocomplete="off">
                    <label class="btn btn-outline-info text- mx-2" for="danger-outlined">Some one else</label>
                </div>
            </div>
            <div class="modal-footer">
                <input value="Continue" id="continueButton" type="button" class="btn btn-outline-info">
                <button type="button" class="btn btn-info text-white" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
<script>
    document.getElementById("continueButton").addEventListener("click", function () {
        var selectedOption = document.querySelector('input[name="options-outlined"]:checked').id;
        if (selectedOption === "success-outlined") {
            // Call an action using AJAX
            // Example:
            // $.ajax({
            //     type: "POST",
            //     url: "/YourController/YourAction",
            //     data: yourData,
            //     success: function(response) {
            //         // Handle success response
            //     },
            //     error: function(xhr, status, error) {
            //         // Handle error
            //     }
            // });
            window.location.href = "/RequestByPatient/RequestForMe";
        } else if (selectedOption === "danger-outlined") {
            // Redirect to another view page
            window.location.href = "/RequestByPatient/RequestForSomeone";
        }
    });
</script>


@section DashboardScripts
    {
     <script type="text/javascript">

    if (window.innerWidth <= 600) {
        document.getElementById("create_new_req").innerHTML
    }
    var tableRows = document.querySelectorAll('#responsiveTable tbody .table-row');

    tableRows.forEach(function (row) {
        row.addEventListener('click', function () {
            if (window.innerWidth <= 600) {
                var details = this.querySelectorAll('.mobile-hide');
                details.forEach(function (detail) {
                    detail.style.display = detail.style.display === 'none' ? 'block' : 'none';
                });
            }
        });
    });

    // Reset when resizing
    window.addEventListener('resize', function () {
        var details = document.querySelectorAll('.mobile-hide');
        if (window.innerWidth > 600) {
            // Reset display property for desktop view
            details.forEach(function (detail) {
                detail.style.removeProperty('display');
            });
        } else {
            // Apply correct display property for mobile view
            details.forEach(function (detail) {
                detail.style.display = 'none';
            });
        }
    });

</script>
    

}